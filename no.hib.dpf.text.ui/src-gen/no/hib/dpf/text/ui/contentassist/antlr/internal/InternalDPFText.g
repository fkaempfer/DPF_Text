/*
 * generated by Xtext
 */
grammar InternalDPFText;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package no.hib.dpf.text.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package no.hib.dpf.text.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import no.hib.dpf.text.services.DPFTextGrammarAccess;

}

@parser::members {
 
 	private DPFTextGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DPFTextGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBatch
entryRuleBatch 
:
{ before(grammarAccess.getBatchRule()); }
	 ruleBatch
{ after(grammarAccess.getBatchRule()); } 
	 EOF 
;

// Rule Batch
ruleBatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBatchAccess().getGroup()); }
(rule__Batch__Group__0)
{ after(grammarAccess.getBatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeEmf
entryRuleMakeEmf 
:
{ before(grammarAccess.getMakeEmfRule()); }
	 ruleMakeEmf
{ after(grammarAccess.getMakeEmfRule()); } 
	 EOF 
;

// Rule MakeEmf
ruleMakeEmf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMakeEmfAccess().getGroup()); }
(rule__MakeEmf__Group__0)
{ after(grammarAccess.getMakeEmfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeEcore
entryRuleMakeEcore 
:
{ before(grammarAccess.getMakeEcoreRule()); }
	 ruleMakeEcore
{ after(grammarAccess.getMakeEcoreRule()); } 
	 EOF 
;

// Rule MakeEcore
ruleMakeEcore
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMakeEcoreAccess().getGroup()); }
(rule__MakeEcore__Group__0)
{ after(grammarAccess.getMakeEcoreAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeImage
entryRuleMakeImage 
:
{ before(grammarAccess.getMakeImageRule()); }
	 ruleMakeImage
{ after(grammarAccess.getMakeImageRule()); } 
	 EOF 
;

// Rule MakeImage
ruleMakeImage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMakeImageAccess().getGroup()); }
(rule__MakeImage__Group__0)
{ after(grammarAccess.getMakeImageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeDiagram
entryRuleMakeDiagram 
:
{ before(grammarAccess.getMakeDiagramRule()); }
	 ruleMakeDiagram
{ after(grammarAccess.getMakeDiagramRule()); } 
	 EOF 
;

// Rule MakeDiagram
ruleMakeDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMakeDiagramAccess().getGroup()); }
(rule__MakeDiagram__Group__0)
{ after(grammarAccess.getMakeDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestMatch
entryRuleTestMatch 
:
{ before(grammarAccess.getTestMatchRule()); }
	 ruleTestMatch
{ after(grammarAccess.getTestMatchRule()); } 
	 EOF 
;

// Rule TestMatch
ruleTestMatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestMatchAccess().getGroup()); }
(rule__TestMatch__Group__0)
{ after(grammarAccess.getTestMatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecification
entryRuleSpecification 
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificationAccess().getGroup()); }
(rule__Specification__Group__0)
{ after(grammarAccess.getSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintList
entryRuleConstraintList 
:
{ before(grammarAccess.getConstraintListRule()); }
	 ruleConstraintList
{ after(grammarAccess.getConstraintListRule()); } 
	 EOF 
;

// Rule ConstraintList
ruleConstraintList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintListAccess().getGroup()); }
(rule__ConstraintList__Group__0)
{ after(grammarAccess.getConstraintListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoosenSpecification
entryRuleChoosenSpecification 
:
{ before(grammarAccess.getChoosenSpecificationRule()); }
	 ruleChoosenSpecification
{ after(grammarAccess.getChoosenSpecificationRule()); } 
	 EOF 
;

// Rule ChoosenSpecification
ruleChoosenSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getGroup()); }
(rule__ChoosenSpecification__Group__0)
{ after(grammarAccess.getChoosenSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersion
entryRuleVersion 
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionAccess().getGroup()); }
(rule__Version__Group__0)
{ after(grammarAccess.getVersionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoosenSignature
entryRuleChoosenSignature 
:
{ before(grammarAccess.getChoosenSignatureRule()); }
	 ruleChoosenSignature
{ after(grammarAccess.getChoosenSignatureRule()); } 
	 EOF 
;

// Rule ChoosenSignature
ruleChoosenSignature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoosenSignatureAccess().getGroup()); }
(rule__ChoosenSignature__Group__0)
{ after(grammarAccess.getChoosenSignatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignature
entryRuleSignature 
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignatureAccess().getGroup()); }
(rule__Signature__Group__0)
{ after(grammarAccess.getSignatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidator
entryRuleValidator 
:
{ before(grammarAccess.getValidatorRule()); }
	 ruleValidator
{ after(grammarAccess.getValidatorRule()); } 
	 EOF 
;

// Rule Validator
ruleValidator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidatorAccess().getGroup()); }
(rule__Validator__Group__0)
{ after(grammarAccess.getValidatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraph
entryRuleGraph 
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphAccess().getGroup()); }
(rule__Graph__Group__0)
{ after(grammarAccess.getGraphAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrow
entryRuleArrow 
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrowAccess().getAlternatives()); }
(rule__Arrow__Alternatives)
{ after(grammarAccess.getArrowAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeSimple
entryRuleNodeSimple 
:
{ before(grammarAccess.getNodeSimpleRule()); }
	 ruleNodeSimple
{ after(grammarAccess.getNodeSimpleRule()); } 
	 EOF 
;

// Rule NodeSimple
ruleNodeSimple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeSimpleAccess().getGroup()); }
(rule__NodeSimple__Group__0)
{ after(grammarAccess.getNodeSimpleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValue
entryRuleAttributeValue 
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueAccess().getAlternatives()); }
(rule__AttributeValue__Alternatives)
{ after(grammarAccess.getAttributeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDpfId
entryRuleDpfId 
:
{ before(grammarAccess.getDpfIdRule()); }
	 ruleDpfId
{ after(grammarAccess.getDpfIdRule()); } 
	 EOF 
;

// Rule DpfId
ruleDpfId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDpfIdAccess().getGroup()); }
(rule__DpfId__Group__0)
{ after(grammarAccess.getDpfIdAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRId
entryRuleRId 
:
{ before(grammarAccess.getRIdRule()); }
	 ruleRId
{ after(grammarAccess.getRIdRule()); } 
	 EOF 
;

// Rule RId
ruleRId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRIdAccess().getGroup()); }
(rule__RId__Group__0)
{ after(grammarAccess.getRIdAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GraphvizOutput
ruleGraphvizOutput
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphvizOutputAccess().getAlternatives()); }
(rule__GraphvizOutput__Alternatives)
{ after(grammarAccess.getGraphvizOutputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ConstraintLanguage
ruleConstraintLanguage
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintLanguageAccess().getOCLEnumLiteralDeclaration()); }
(	'OCL' 
)
{ after(grammarAccess.getConstraintLanguageAccess().getOCLEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSpecificationParserRuleCall_0()); }
	ruleSpecification
{ after(grammarAccess.getModelAccess().getSpecificationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getSignatureParserRuleCall_1()); }
	ruleSignature
{ after(grammarAccess.getModelAccess().getSignatureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getBatchParserRuleCall_2()); }
	ruleBatch
{ after(grammarAccess.getModelAccess().getBatchParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getMakeEmfParserRuleCall_0()); }
	ruleMakeEmf
{ after(grammarAccess.getCommandAccess().getMakeEmfParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getMakeEcoreParserRuleCall_1()); }
	ruleMakeEcore
{ after(grammarAccess.getCommandAccess().getMakeEcoreParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getMakeImageParserRuleCall_2()); }
	ruleMakeImage
{ after(grammarAccess.getCommandAccess().getMakeImageParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getMakeDiagramParserRuleCall_3()); }
	ruleMakeDiagram
{ after(grammarAccess.getCommandAccess().getMakeDiagramParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getTestMatchParserRuleCall_4()); }
	ruleTestMatch
{ after(grammarAccess.getCommandAccess().getTestMatchParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Arity_dAlternatives_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dArrowParserRuleCall_5_0_0_0()); }
	ruleArrow
{ after(grammarAccess.getConstraintAccess().getArity_dArrowParserRuleCall_5_0_0_0()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getArity_dNodeSimpleParserRuleCall_5_0_0_1()); }
	ruleNodeSimple
{ after(grammarAccess.getConstraintAccess().getArity_dNodeSimpleParserRuleCall_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Arity_dAlternatives_5_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dArrowParserRuleCall_5_1_1_0_0()); }
	ruleArrow
{ after(grammarAccess.getConstraintAccess().getArity_dArrowParserRuleCall_5_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getArity_dNodeSimpleParserRuleCall_5_1_1_0_1()); }
	ruleNodeSimple
{ after(grammarAccess.getConstraintAccess().getArity_dNodeSimpleParserRuleCall_5_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ArityAlternatives_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityArrowParserRuleCall_5_0_0_0()); }
	ruleArrow
{ after(grammarAccess.getValidatorAccess().getArityArrowParserRuleCall_5_0_0_0()); }
)

    |(
{ before(grammarAccess.getValidatorAccess().getArityNodeSimpleParserRuleCall_5_0_0_1()); }
	ruleNodeSimple
{ after(grammarAccess.getValidatorAccess().getArityNodeSimpleParserRuleCall_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ArityAlternatives_5_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityArrowParserRuleCall_5_1_1_0_0()); }
	ruleArrow
{ after(grammarAccess.getValidatorAccess().getArityArrowParserRuleCall_5_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getValidatorAccess().getArityNodeSimpleParserRuleCall_5_1_1_0_1()); }
	ruleNodeSimple
{ after(grammarAccess.getValidatorAccess().getArityNodeSimpleParserRuleCall_5_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getNodeParserRuleCall_0()); }
	ruleNode
{ after(grammarAccess.getElementAccess().getNodeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getArrowParserRuleCall_1()); }
	ruleArrow
{ after(grammarAccess.getElementAccess().getArrowParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getGroup_0()); }
(rule__Arrow__Group_0__0)
{ after(grammarAccess.getArrowAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getArrowAccess().getGroup_1()); }
(rule__Arrow__Group_1__0)
{ after(grammarAccess.getArrowAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getArrowAccess().getGroup_2()); }
(rule__Arrow__Group_2__0)
{ after(grammarAccess.getArrowAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getArrowAccess().getGroup_3()); }
(rule__Arrow__Group_3__0)
{ after(grammarAccess.getArrowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_0()); }
(rule__Property__Group_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_1()); }
(rule__Property__Group_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_2()); }
(rule__Property__Group_2__0)
{ after(grammarAccess.getPropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_0()); }
(rule__AttributeValue__ValueAssignment_0)
{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getVariableIdAssignment_1()); }
(rule__AttributeValue__VariableIdAssignment_1)
{ after(grammarAccess.getAttributeValueAccess().getVariableIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTBOOLEANEnumLiteralDeclaration_0()); }
(	'Boolean' 
)
{ after(grammarAccess.getDataTypeAccess().getTBOOLEANEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTCHAREnumLiteralDeclaration_1()); }
(	'Char' 
)
{ after(grammarAccess.getDataTypeAccess().getTCHAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTBYTEEnumLiteralDeclaration_2()); }
(	'Byte' 
)
{ after(grammarAccess.getDataTypeAccess().getTBYTEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTSHORTEnumLiteralDeclaration_3()); }
(	'Short' 
)
{ after(grammarAccess.getDataTypeAccess().getTSHORTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTINTEnumLiteralDeclaration_4()); }
(	'Int' 
)
{ after(grammarAccess.getDataTypeAccess().getTINTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTLONGEnumLiteralDeclaration_5()); }
(	'Long' 
)
{ after(grammarAccess.getDataTypeAccess().getTLONGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTFLOATEnumLiteralDeclaration_6()); }
(	'Float' 
)
{ after(grammarAccess.getDataTypeAccess().getTFLOATEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTDOUBLEEnumLiteralDeclaration_7()); }
(	'Double' 
)
{ after(grammarAccess.getDataTypeAccess().getTDOUBLEEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTSTRINGEnumLiteralDeclaration_8()); }
(	'String' 
)
{ after(grammarAccess.getDataTypeAccess().getTSTRINGEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphvizOutput__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphvizOutputAccess().getJPGEnumLiteralDeclaration_0()); }
(	'jpg' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getJPGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getBMPEnumLiteralDeclaration_1()); }
(	'bmp' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getBMPEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getCANONEnumLiteralDeclaration_2()); }
(	'canon' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getCANONEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getDOTEnumLiteralDeclaration_3()); }
(	'dot' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getDOTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getXDOTEnumLiteralDeclaration_4()); }
(	'xdot' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getXDOTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getCMAPEnumLiteralDeclaration_5()); }
(	'cmap' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getCMAPEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getEPSEnumLiteralDeclaration_6()); }
(	'eps' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getEPSEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getFIGEnumLiteralDeclaration_7()); }
(	'fig' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getFIGEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getGDEnumLiteralDeclaration_8()); }
(	'gd' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getGDEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getGD2EnumLiteralDeclaration_9()); }
(	'gd2' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getGD2EnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getGIFEnumLiteralDeclaration_10()); }
(	'gif' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getGIFEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getGTKEnumLiteralDeclaration_11()); }
(	'gtk' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getGTKEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getICOEnumLiteralDeclaration_12()); }
(	'ico' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getICOEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getIMAPEnumLiteralDeclaration_13()); }
(	'imap' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getIMAPEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getCMAPXEnumLiteralDeclaration_14()); }
(	'cmapx' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getCMAPXEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getIMAP_NPEnumLiteralDeclaration_15()); }
(	'imap_np' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getIMAP_NPEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getCMAP_NPEnumLiteralDeclaration_16()); }
(	'cmapx_np' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getCMAP_NPEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getISMAPEnumLiteralDeclaration_17()); }
(	'ismap' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getISMAPEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getJPEGEnumLiteralDeclaration_18()); }
(	'jpeg' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getJPEGEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getJPEEnumLiteralDeclaration_19()); }
(	'jpe' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getJPEEnumLiteralDeclaration_19()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPDFEnumLiteralDeclaration_20()); }
(	'pdf' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPDFEnumLiteralDeclaration_20()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPLAINEnumLiteralDeclaration_21()); }
(	'plain' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPLAINEnumLiteralDeclaration_21()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPLAIN_EXTEnumLiteralDeclaration_22()); }
(	'plain-ext' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPLAIN_EXTEnumLiteralDeclaration_22()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPNGEnumLiteralDeclaration_23()); }
(	'png' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPNGEnumLiteralDeclaration_23()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPSEnumLiteralDeclaration_24()); }
(	'ps' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPSEnumLiteralDeclaration_24()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getPS2EnumLiteralDeclaration_25()); }
(	'ps2' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getPS2EnumLiteralDeclaration_25()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getSVGEnumLiteralDeclaration_26()); }
(	'svg' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getSVGEnumLiteralDeclaration_26()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getSVGZEnumLiteralDeclaration_27()); }
(	'svgz' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getSVGZEnumLiteralDeclaration_27()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getTIFEnumLiteralDeclaration_28()); }
(	'tif' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getTIFEnumLiteralDeclaration_28()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getTIFFEnumLiteralDeclaration_29()); }
(	'tiff' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getTIFFEnumLiteralDeclaration_29()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getVMLEnumLiteralDeclaration_30()); }
(	'vml' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getVMLEnumLiteralDeclaration_30()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getVMLZEnumLiteralDeclaration_31()); }
(	'vmlz' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getVMLZEnumLiteralDeclaration_31()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getVRMLEnumLiteralDeclaration_32()); }
(	'vrml' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getVRMLEnumLiteralDeclaration_32()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getWBMPEnumLiteralDeclaration_33()); }
(	'wbmp' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getWBMPEnumLiteralDeclaration_33()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getWEBPEnumLiteralDeclaration_34()); }
(	'webp' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getWEBPEnumLiteralDeclaration_34()); }
)

    |(
{ before(grammarAccess.getGraphvizOutputAccess().getXLIBEnumLiteralDeclaration_35()); }
(	'xlib' 
)
{ after(grammarAccess.getGraphvizOutputAccess().getXLIBEnumLiteralDeclaration_35()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Batch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group__0__Impl
	rule__Batch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getBatchKeyword_0()); }

	'Batch' 

{ after(grammarAccess.getBatchAccess().getBatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Batch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group__1__Impl
	rule__Batch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBatchAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Batch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group__2__Impl
	rule__Batch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getGroup_2()); }
(rule__Batch__Group_2__0)?
{ after(grammarAccess.getBatchAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Batch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBatchAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Batch__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group_2__0__Impl
	rule__Batch__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getCommandsAssignment_2_0()); }
(rule__Batch__CommandsAssignment_2_0)
{ after(grammarAccess.getBatchAccess().getCommandsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Batch__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getGroup_2_1()); }
(rule__Batch__Group_2_1__0)*
{ after(grammarAccess.getBatchAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Batch__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group_2_1__0__Impl
	rule__Batch__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getBatchAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Batch__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Batch__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getCommandsAssignment_2_1_1()); }
(rule__Batch__CommandsAssignment_2_1_1)
{ after(grammarAccess.getBatchAccess().getCommandsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MakeEmf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEmf__Group__0__Impl
	rule__MakeEmf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEmf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEmfAccess().getEmfKeyword_0()); }

	'emf' 

{ after(grammarAccess.getMakeEmfAccess().getEmfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEmf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEmf__Group__1__Impl
	rule__MakeEmf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEmf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEmfAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMakeEmfAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEmf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEmf__Group__2__Impl
	rule__MakeEmf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEmf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEmfAccess().getIdAssignment_2()); }
(rule__MakeEmf__IdAssignment_2)
{ after(grammarAccess.getMakeEmfAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEmf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEmf__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEmf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEmfAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMakeEmfAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MakeEcore__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEcore__Group__0__Impl
	rule__MakeEcore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEcore__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEcoreAccess().getEcoreKeyword_0()); }

	'ecore' 

{ after(grammarAccess.getMakeEcoreAccess().getEcoreKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEcore__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEcore__Group__1__Impl
	rule__MakeEcore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEcore__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEcoreAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMakeEcoreAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEcore__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEcore__Group__2__Impl
	rule__MakeEcore__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEcore__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEcoreAccess().getIdAssignment_2()); }
(rule__MakeEcore__IdAssignment_2)
{ after(grammarAccess.getMakeEcoreAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeEcore__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeEcore__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEcore__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEcoreAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMakeEcoreAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MakeImage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group__0__Impl
	rule__MakeImage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getImageKeyword_0()); }

	'image' 

{ after(grammarAccess.getMakeImageAccess().getImageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeImage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group__1__Impl
	rule__MakeImage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMakeImageAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeImage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group__2__Impl
	rule__MakeImage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getIdAssignment_2()); }
(rule__MakeImage__IdAssignment_2)
{ after(grammarAccess.getMakeImageAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeImage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group__3__Impl
	rule__MakeImage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getGroup_3()); }
(rule__MakeImage__Group_3__0)?
{ after(grammarAccess.getMakeImageAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeImage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMakeImageAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MakeImage__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group_3__0__Impl
	rule__MakeImage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getMakeImageAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeImage__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeImage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getTypeAssignment_3_1()); }
(rule__MakeImage__TypeAssignment_3_1)
{ after(grammarAccess.getMakeImageAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MakeDiagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group__0__Impl
	rule__MakeDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getDiagramKeyword_0()); }

	'diagram' 

{ after(grammarAccess.getMakeDiagramAccess().getDiagramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeDiagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group__1__Impl
	rule__MakeDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMakeDiagramAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeDiagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group__2__Impl
	rule__MakeDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getIdAssignment_2()); }
(rule__MakeDiagram__IdAssignment_2)
{ after(grammarAccess.getMakeDiagramAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeDiagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group__3__Impl
	rule__MakeDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getGroup_3()); }
(rule__MakeDiagram__Group_3__0)?
{ after(grammarAccess.getMakeDiagramAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeDiagram__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMakeDiagramAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MakeDiagram__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group_3__0__Impl
	rule__MakeDiagram__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getMakeDiagramAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MakeDiagram__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MakeDiagram__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getTypeAssignment_3_1()); }
(rule__MakeDiagram__TypeAssignment_3_1)
{ after(grammarAccess.getMakeDiagramAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestMatch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__0__Impl
	rule__TestMatch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getTestMatchKeyword_0()); }

	'testMatch' 

{ after(grammarAccess.getTestMatchAccess().getTestMatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestMatch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__1__Impl
	rule__TestMatch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTestMatchAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestMatch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__2__Impl
	rule__TestMatch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getSearchAssignment_2()); }
(rule__TestMatch__SearchAssignment_2)
{ after(grammarAccess.getTestMatchAccess().getSearchAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestMatch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__3__Impl
	rule__TestMatch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getTestMatchAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestMatch__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__4__Impl
	rule__TestMatch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getIntoAssignment_4()); }
(rule__TestMatch__IntoAssignment_4)
{ after(grammarAccess.getTestMatchAccess().getIntoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestMatch__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestMatch__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getTestMatchAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Specification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__0__Impl
	rule__Specification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getSpecificationKeyword_0()); }

	'Specification' 

{ after(grammarAccess.getSpecificationAccess().getSpecificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__1__Impl
	rule__Specification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getVersionAssignment_1()); }
(rule__Specification__VersionAssignment_1)
{ after(grammarAccess.getSpecificationAccess().getVersionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__2__Impl
	rule__Specification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSpecificationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__3__Impl
	rule__Specification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getTypeAssignment_3()); }
(rule__Specification__TypeAssignment_3)
{ after(grammarAccess.getSpecificationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__4__Impl
	rule__Specification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getOutputAssignment_4()); }
(rule__Specification__OutputAssignment_4)?
{ after(grammarAccess.getSpecificationAccess().getOutputAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__5__Impl
	rule__Specification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getSpecificationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__6__Impl
	rule__Specification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getGraphAssignment_6()); }
(rule__Specification__GraphAssignment_6)
{ after(grammarAccess.getSpecificationAccess().getGraphAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__7__Impl
	rule__Specification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getAtomicConstraintsAssignment_7()); }
(rule__Specification__AtomicConstraintsAssignment_7)*
{ after(grammarAccess.getSpecificationAccess().getAtomicConstraintsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getSpecificationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ConstraintList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__0__Impl
	rule__ConstraintList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintsKeyword_0()); }

	'Constraints' 

{ after(grammarAccess.getConstraintListAccess().getConstraintsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__1__Impl
	rule__ConstraintList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getConstraintListAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__2__Impl
	rule__ConstraintList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintSemanticAssignment_2()); }
(rule__ConstraintList__ConstraintSemanticAssignment_2)
{ after(grammarAccess.getConstraintListAccess().getConstraintSemanticAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__3__Impl
	rule__ConstraintList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getConstraintListAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__4__Impl
	rule__ConstraintList__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getGroup_4()); }
(rule__ConstraintList__Group_4__0)?
{ after(grammarAccess.getConstraintListAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getConstraintListAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstraintList__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group_4__0__Impl
	rule__ConstraintList__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintsAssignment_4_0()); }
(rule__ConstraintList__ConstraintsAssignment_4_0)
{ after(grammarAccess.getConstraintListAccess().getConstraintsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getGroup_4_1()); }
(rule__ConstraintList__Group_4_1__0)*
{ after(grammarAccess.getConstraintListAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintList__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group_4_1__0__Impl
	rule__ConstraintList__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getConstraintListAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintList__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintList__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintsAssignment_4_1_1()); }
(rule__ConstraintList__ConstraintsAssignment_4_1_1)
{ after(grammarAccess.getConstraintListAccess().getConstraintsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChoosenSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSpecification__Group__0__Impl
	rule__ChoosenSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getIdAssignment_0()); }
(rule__ChoosenSpecification__IdAssignment_0)
{ after(grammarAccess.getChoosenSpecificationAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSpecification__Group__1__Impl
	rule__ChoosenSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getVersionKeyword_1()); }

	'<version=' 

{ after(grammarAccess.getChoosenSpecificationAccess().getVersionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSpecification__Group__2__Impl
	rule__ChoosenSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getVersionNameAssignment_2()); }
(rule__ChoosenSpecification__VersionNameAssignment_2)
{ after(grammarAccess.getChoosenSpecificationAccess().getVersionNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getChoosenSpecificationAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Version__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__0__Impl
	rule__Version__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getVersionKeyword_0()); }

	'<version=' 

{ after(grammarAccess.getVersionAccess().getVersionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__1__Impl
	rule__Version__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNameAssignment_1()); }
(rule__Version__NameAssignment_1)
{ after(grammarAccess.getVersionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__2__Impl
	rule__Version__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getVersionAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__3__Impl
	rule__Version__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNumberAssignment_3()); }
(rule__Version__NumberAssignment_3)
{ after(grammarAccess.getVersionAccess().getNumberAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__4__Impl
	rule__Version__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getVersionAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__5__Impl
	rule__Version__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNextNumberAssignment_5()); }
(rule__Version__NextNumberAssignment_5)
{ after(grammarAccess.getVersionAccess().getNextNumberAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getGreaterThanSignKeyword_6()); }

	'>' 

{ after(grammarAccess.getVersionAccess().getGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ChoosenSignature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSignature__Group__0__Impl
	rule__ChoosenSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getIdAssignment_0()); }
(rule__ChoosenSignature__IdAssignment_0)
{ after(grammarAccess.getChoosenSignatureAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSignature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSignature__Group__1__Impl
	rule__ChoosenSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getVersionKeyword_1()); }

	'<version=' 

{ after(grammarAccess.getChoosenSignatureAccess().getVersionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSignature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSignature__Group__2__Impl
	rule__ChoosenSignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getVersionNameAssignment_2()); }
(rule__ChoosenSignature__VersionNameAssignment_2)
{ after(grammarAccess.getChoosenSignatureAccess().getVersionNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoosenSignature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoosenSignature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getChoosenSignatureAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTypeAssignment_0()); }
(rule__Constraint__TypeAssignment_0)
{ after(grammarAccess.getConstraintAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_2()); }
(rule__Constraint__Group_2__0)?
{ after(grammarAccess.getConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__5__Impl
	rule__Constraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_5()); }
(rule__Constraint__Group_5__0)
{ after(grammarAccess.getConstraintAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Constraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__0__Impl
	rule__Constraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParameterAssignment_2_0()); }
(rule__Constraint__ParameterAssignment_2_0)
{ after(grammarAccess.getConstraintAccess().getParameterAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_2_1()); }
(rule__Constraint__Group_2_1__0)*
{ after(grammarAccess.getConstraintAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2_1__0__Impl
	rule__Constraint__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getConstraintAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParameterAssignment_2_1_1()); }
(rule__Constraint__ParameterAssignment_2_1_1)
{ after(grammarAccess.getConstraintAccess().getParameterAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5__0__Impl
	rule__Constraint__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dAssignment_5_0()); }
(rule__Constraint__Arity_dAssignment_5_0)
{ after(grammarAccess.getConstraintAccess().getArity_dAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_5_1()); }
(rule__Constraint__Group_5_1__0)*
{ after(grammarAccess.getConstraintAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5_1__0__Impl
	rule__Constraint__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getConstraintAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dAssignment_5_1_1()); }
(rule__Constraint__Arity_dAssignment_5_1_1)
{ after(grammarAccess.getConstraintAccess().getArity_dAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSignatureKeyword_0()); }

	'Signature' 

{ after(grammarAccess.getSignatureAccess().getSignatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getVersionAssignment_1()); }
(rule__Signature__VersionAssignment_1)
{ after(grammarAccess.getSignatureAccess().getVersionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__2__Impl
	rule__Signature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGroup_2()); }
(rule__Signature__Group_2__0)?
{ after(grammarAccess.getSignatureAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__3__Impl
	rule__Signature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSignatureAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__4__Impl
	rule__Signature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getValidatorsAssignment_4()); }
(rule__Signature__ValidatorsAssignment_4)
{ after(grammarAccess.getSignatureAccess().getValidatorsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__5__Impl
	rule__Signature__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGroup_5()); }
(rule__Signature__Group_5__0)*
{ after(grammarAccess.getSignatureAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSignatureAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Signature__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_2__0__Impl
	rule__Signature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getSignatureAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_2__1__Impl
	rule__Signature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getInputAssignment_2_1()); }
(rule__Signature__InputAssignment_2_1)
{ after(grammarAccess.getSignatureAccess().getInputAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGreaterThanSignKeyword_2_2()); }

	'>' 

{ after(grammarAccess.getSignatureAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signature__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_5__0__Impl
	rule__Signature__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getSignatureAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getValidatorsAssignment_5_1()); }
(rule__Signature__ValidatorsAssignment_5_1)
{ after(grammarAccess.getSignatureAccess().getValidatorsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Validator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__0__Impl
	rule__Validator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getIdAssignment_0()); }
(rule__Validator__IdAssignment_0)
{ after(grammarAccess.getValidatorAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__1__Impl
	rule__Validator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getValidatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__2__Impl
	rule__Validator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getGroup_2()); }
(rule__Validator__Group_2__0)?
{ after(grammarAccess.getValidatorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__3__Impl
	rule__Validator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getValidatorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__4__Impl
	rule__Validator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getValidatorAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__5__Impl
	rule__Validator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getGroup_5()); }
(rule__Validator__Group_5__0)
{ after(grammarAccess.getValidatorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__6__Impl
	rule__Validator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getValidatorAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__7__Impl
	rule__Validator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getEqualsSignKeyword_7()); }

	'=' 

{ after(grammarAccess.getValidatorAccess().getEqualsSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__8__Impl
	rule__Validator__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getOclAssignment_8()); }
(rule__Validator__OclAssignment_8)
{ after(grammarAccess.getValidatorAccess().getOclAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__9__Impl
	rule__Validator__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getErrorMsgKeyword_9()); }

	'errorMsg=' 

{ after(grammarAccess.getValidatorAccess().getErrorMsgKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getErrorMsgAssignment_10()); }
(rule__Validator__ErrorMsgAssignment_10)
{ after(grammarAccess.getValidatorAccess().getErrorMsgAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Validator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_2__0__Impl
	rule__Validator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getParameter_varsAssignment_2_0()); }
(rule__Validator__Parameter_varsAssignment_2_0)
{ after(grammarAccess.getValidatorAccess().getParameter_varsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getGroup_2_1()); }
(rule__Validator__Group_2_1__0)*
{ after(grammarAccess.getValidatorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Validator__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_2_1__0__Impl
	rule__Validator__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getValidatorAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getParameter_varsAssignment_2_1_1()); }
(rule__Validator__Parameter_varsAssignment_2_1_1)
{ after(grammarAccess.getValidatorAccess().getParameter_varsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Validator__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_5__0__Impl
	rule__Validator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityAssignment_5_0()); }
(rule__Validator__ArityAssignment_5_0)
{ after(grammarAccess.getValidatorAccess().getArityAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getGroup_5_1()); }
(rule__Validator__Group_5_1__0)*
{ after(grammarAccess.getValidatorAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Validator__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_5_1__0__Impl
	rule__Validator__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getValidatorAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Validator__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityAssignment_5_1_1()); }
(rule__Validator__ArityAssignment_5_1_1)
{ after(grammarAccess.getValidatorAccess().getArityAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Graph__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getGraphKeyword_0()); }

	'Graph' 

{ after(grammarAccess.getGraphAccess().getGraphKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__2__Impl
	rule__Graph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getGroup_2()); }
(rule__Graph__Group_2__0)?
{ after(grammarAccess.getGraphAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Graph__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group_2__0__Impl
	rule__Graph__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getElementsAssignment_2_0()); }
(rule__Graph__ElementsAssignment_2_0)
{ after(grammarAccess.getGraphAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getGroup_2_1()); }
(rule__Graph__Group_2_1__0)*
{ after(grammarAccess.getGraphAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Graph__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group_2_1__0__Impl
	rule__Graph__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getGraphAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getElementsAssignment_2_1_1()); }
(rule__Graph__ElementsAssignment_2_1_1)
{ after(grammarAccess.getGraphAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arrow__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_0__0__Impl
	rule__Arrow__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrAssignment_0_0()); }
(rule__Arrow__SrAssignment_0_0)
{ after(grammarAccess.getArrowAccess().getSrAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_0__1__Impl
	rule__Arrow__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_0__2__Impl
	rule__Arrow__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdAssignment_0_2()); }
(rule__Arrow__IdAssignment_0_2)
{ after(grammarAccess.getArrowAccess().getIdAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_0__3__Impl
	rule__Arrow__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getColonAsteriskHyphenMinusGreaterThanSignKeyword_0_3()); }

	':*->' 

{ after(grammarAccess.getArrowAccess().getColonAsteriskHyphenMinusGreaterThanSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgDataTypeAssignment_0_4()); }
(rule__Arrow__TgDataTypeAssignment_0_4)
{ after(grammarAccess.getArrowAccess().getTgDataTypeAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Arrow__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__0__Impl
	rule__Arrow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrAssignment_1_0()); }
(rule__Arrow__SrAssignment_1_0)
{ after(grammarAccess.getArrowAccess().getSrAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__1__Impl
	rule__Arrow__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__2__Impl
	rule__Arrow__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdAssignment_1_2()); }
(rule__Arrow__IdAssignment_1_2)
{ after(grammarAccess.getArrowAccess().getIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__3__Impl
	rule__Arrow__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getArrowAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__4__Impl
	rule__Arrow__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTypeAssignment_1_4()); }
(rule__Arrow__TypeAssignment_1_4)
{ after(grammarAccess.getArrowAccess().getTypeAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__5__Impl
	rule__Arrow__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_5()); }

	'->' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgValueAssignment_1_6()); }
(rule__Arrow__TgValueAssignment_1_6)
{ after(grammarAccess.getArrowAccess().getTgValueAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Arrow__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__0__Impl
	rule__Arrow__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrAssignment_2_0()); }
(rule__Arrow__SrAssignment_2_0)
{ after(grammarAccess.getArrowAccess().getSrAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__1__Impl
	rule__Arrow__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusKeyword_2_1()); }

	'-' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__2__Impl
	rule__Arrow__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdAssignment_2_2()); }
(rule__Arrow__IdAssignment_2_2)
{ after(grammarAccess.getArrowAccess().getIdAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__3__Impl
	rule__Arrow__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getColonKeyword_2_3()); }

	':' 

{ after(grammarAccess.getArrowAccess().getColonKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__4__Impl
	rule__Arrow__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTypeAssignment_2_4()); }
(rule__Arrow__TypeAssignment_2_4)
{ after(grammarAccess.getArrowAccess().getTypeAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__5__Impl
	rule__Arrow__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_2_5()); }

	'->' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgNodeAssignment_2_6()); }
(rule__Arrow__TgNodeAssignment_2_6)
{ after(grammarAccess.getArrowAccess().getTgNodeAssignment_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Arrow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__0__Impl
	rule__Arrow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrAssignment_3_0()); }
(rule__Arrow__SrAssignment_3_0)
{ after(grammarAccess.getArrowAccess().getSrAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__1__Impl
	rule__Arrow__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getHyphenMinusVerticalLineGreaterThanSignKeyword_3_1()); }

	'-|>' 

{ after(grammarAccess.getArrowAccess().getHyphenMinusVerticalLineGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgNodeAssignment_3_2()); }
(rule__Arrow__TgNodeAssignment_3_2)
{ after(grammarAccess.getArrowAccess().getTgNodeAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getIdAssignment_0()); }
(rule__Node__IdAssignment_0)
{ after(grammarAccess.getNodeAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getNodeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTypeAssignment_2()); }
(rule__Node__TypeAssignment_2)
{ after(grammarAccess.getNodeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_3()); }
(rule__Node__Group_3__0)?
{ after(grammarAccess.getNodeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_4()); }
(rule__Node__Group_4__0)?
{ after(grammarAccess.getNodeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Node__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3__0__Impl
	rule__Node__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getNodeAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3__1__Impl
	rule__Node__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getInhAssignment_3_1()); }
(rule__Node__InhAssignment_3_1)
{ after(grammarAccess.getNodeAccess().getInhAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_3_2()); }
(rule__Node__Group_3_2__0)*
{ after(grammarAccess.getNodeAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Node__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3_2__0__Impl
	rule__Node__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getAndKeyword_3_2_0()); }

	'and' 

{ after(grammarAccess.getNodeAccess().getAndKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getInhAssignment_3_2_1()); }
(rule__Node__InhAssignment_3_2_1)
{ after(grammarAccess.getNodeAccess().getInhAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Node__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__0__Impl
	rule__Node__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__1__Impl
	rule__Node__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_4_1()); }
(rule__Node__Group_4_1__0)?
{ after(grammarAccess.getNodeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Node__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_1__0__Impl
	rule__Node__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPropertiesAssignment_4_1_0()); }
(rule__Node__PropertiesAssignment_4_1_0)
{ after(grammarAccess.getNodeAccess().getPropertiesAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_4_1_1()); }
(rule__Node__Group_4_1_1__0)*
{ after(grammarAccess.getNodeAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Node__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_1_1__0__Impl
	rule__Node__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getNodeAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPropertiesAssignment_4_1_1_1()); }
(rule__Node__PropertiesAssignment_4_1_1_1)
{ after(grammarAccess.getNodeAccess().getPropertiesAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeSimple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSimple__Group__0__Impl
	rule__NodeSimple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSimple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSimpleAccess().getIdAssignment_0()); }
(rule__NodeSimple__IdAssignment_0)
{ after(grammarAccess.getNodeSimpleAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSimple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSimple__Group__1__Impl
	rule__NodeSimple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSimple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSimpleAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getNodeSimpleAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSimple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSimple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSimple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSimpleAccess().getTypeAssignment_2()); }
(rule__NodeSimple__TypeAssignment_2)
{ after(grammarAccess.getNodeSimpleAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__0__Impl
	rule__Property__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdAssignment_0_0()); }
(rule__Property__IdAssignment_0_0)
{ after(grammarAccess.getPropertyAccess().getIdAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__1__Impl
	rule__Property__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonAsteriskHyphenMinusGreaterThanSignKeyword_0_1()); }

	':*->' 

{ after(grammarAccess.getPropertyAccess().getColonAsteriskHyphenMinusGreaterThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgDataTypeAssignment_0_2()); }
(rule__Property__TgDataTypeAssignment_0_2)
{ after(grammarAccess.getPropertyAccess().getTgDataTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__0__Impl
	rule__Property__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdAssignment_1_0()); }
(rule__Property__IdAssignment_1_0)
{ after(grammarAccess.getPropertyAccess().getIdAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__1__Impl
	rule__Property__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__2__Impl
	rule__Property__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_1_2()); }
(rule__Property__TypeAssignment_1_2)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__3__Impl
	rule__Property__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getHyphenMinusGreaterThanSignKeyword_1_3()); }

	'->' 

{ after(grammarAccess.getPropertyAccess().getHyphenMinusGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgValueAssignment_1_4()); }
(rule__Property__TgValueAssignment_1_4)
{ after(grammarAccess.getPropertyAccess().getTgValueAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Property__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__0__Impl
	rule__Property__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdAssignment_2_0()); }
(rule__Property__IdAssignment_2_0)
{ after(grammarAccess.getPropertyAccess().getIdAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__1__Impl
	rule__Property__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__2__Impl
	rule__Property__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_2_2()); }
(rule__Property__TypeAssignment_2_2)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__3__Impl
	rule__Property__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getHyphenMinusGreaterThanSignKeyword_2_3()); }

	'->' 

{ after(grammarAccess.getPropertyAccess().getHyphenMinusGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgNodeAssignment_2_4()); }
(rule__Property__TgNodeAssignment_2_4)
{ after(grammarAccess.getPropertyAccess().getTgNodeAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DpfId__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DpfId__Group__0__Impl
	rule__DpfId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getNameAssignment_0()); }
(rule__DpfId__NameAssignment_0)
{ after(grammarAccess.getDpfIdAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DpfId__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DpfId__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getGroup_1()); }
(rule__DpfId__Group_1__0)?
{ after(grammarAccess.getDpfIdAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DpfId__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DpfId__Group_1__0__Impl
	rule__DpfId__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getDpfIdAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DpfId__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DpfId__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getIdAssignment_1_1()); }
(rule__DpfId__IdAssignment_1_1)
{ after(grammarAccess.getDpfIdAccess().getIdAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RId__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RId__Group__0__Impl
	rule__RId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RId__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getNumsAssignment_0()); }
(rule__RId__NumsAssignment_0)
{ after(grammarAccess.getRIdAccess().getNumsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RId__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RId__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RId__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getGroup_1()); }
(rule__RId__Group_1__0)*
{ after(grammarAccess.getRIdAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RId__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RId__Group_1__0__Impl
	rule__RId__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RId__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getRIdAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RId__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RId__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RId__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getNumsAssignment_1_1()); }
(rule__RId__NumsAssignment_1_1)
{ after(grammarAccess.getRIdAccess().getNumsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Batch__CommandsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getCommandsCommandParserRuleCall_2_0_0()); }
	ruleCommand{ after(grammarAccess.getBatchAccess().getCommandsCommandParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Batch__CommandsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBatchAccess().getCommandsCommandParserRuleCall_2_1_1_0()); }
	ruleCommand{ after(grammarAccess.getBatchAccess().getCommandsCommandParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEmf__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEmfAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMakeEmfAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeEcore__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeEcoreAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMakeEcoreAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMakeImageAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeImage__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeImageAccess().getTypeGraphvizOutputEnumRuleCall_3_1_0()); }
	ruleGraphvizOutput{ after(grammarAccess.getMakeImageAccess().getTypeGraphvizOutputEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMakeDiagramAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeDiagram__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeDiagramAccess().getTypeGraphvizOutputEnumRuleCall_3_1_0()); }
	ruleGraphvizOutput{ after(grammarAccess.getMakeDiagramAccess().getTypeGraphvizOutputEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__SearchAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getSearchIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getTestMatchAccess().getSearchIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestMatch__IntoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestMatchAccess().getIntoIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getTestMatchAccess().getIntoIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__VersionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getVersionVersionParserRuleCall_1_0()); }
	ruleVersion{ after(grammarAccess.getSpecificationAccess().getVersionVersionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getTypeChoosenSpecificationParserRuleCall_3_0()); }
	ruleChoosenSpecification{ after(grammarAccess.getSpecificationAccess().getTypeChoosenSpecificationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__OutputAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getOutputPLAINKeyword_4_0()); }
(
{ before(grammarAccess.getSpecificationAccess().getOutputPLAINKeyword_4_0()); }

	'<PLAIN>' 

{ after(grammarAccess.getSpecificationAccess().getOutputPLAINKeyword_4_0()); }
)

{ after(grammarAccess.getSpecificationAccess().getOutputPLAINKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__GraphAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getGraphGraphParserRuleCall_6_0()); }
	ruleGraph{ after(grammarAccess.getSpecificationAccess().getGraphGraphParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__AtomicConstraintsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getAtomicConstraintsConstraintListParserRuleCall_7_0()); }
	ruleConstraintList{ after(grammarAccess.getSpecificationAccess().getAtomicConstraintsConstraintListParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__ConstraintSemanticAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintSemanticChoosenSignatureParserRuleCall_2_0()); }
	ruleChoosenSignature{ after(grammarAccess.getConstraintListAccess().getConstraintSemanticChoosenSignatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__ConstraintsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintsConstraintParserRuleCall_4_0_0()); }
	ruleConstraint{ after(grammarAccess.getConstraintListAccess().getConstraintsConstraintParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintList__ConstraintsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintListAccess().getConstraintsConstraintParserRuleCall_4_1_1_0()); }
	ruleConstraint{ after(grammarAccess.getConstraintListAccess().getConstraintsConstraintParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getChoosenSpecificationAccess().getIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSpecification__VersionNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSpecificationAccess().getVersionNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getChoosenSpecificationAccess().getVersionNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getVersionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__NumberAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNumberINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getVersionAccess().getNumberINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__NextNumberAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getNextNumberINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getVersionAccess().getNextNumberINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getChoosenSignatureAccess().getIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoosenSignature__VersionNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoosenSignatureAccess().getVersionNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getChoosenSignatureAccess().getVersionNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTypeDpfIdParserRuleCall_0_0()); }
	ruleDpfId{ after(grammarAccess.getConstraintAccess().getTypeDpfIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParameterAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParameterSTRINGTerminalRuleCall_2_0_0()); }
	RULE_STRING{ after(grammarAccess.getConstraintAccess().getParameterSTRINGTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParameterAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getParameterSTRINGTerminalRuleCall_2_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getConstraintAccess().getParameterSTRINGTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Arity_dAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dAlternatives_5_0_0()); }
(rule__Constraint__Arity_dAlternatives_5_0_0)
{ after(grammarAccess.getConstraintAccess().getArity_dAlternatives_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Arity_dAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getArity_dAlternatives_5_1_1_0()); }
(rule__Constraint__Arity_dAlternatives_5_1_1_0)
{ after(grammarAccess.getConstraintAccess().getArity_dAlternatives_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__VersionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getVersionVersionParserRuleCall_1_0()); }
	ruleVersion{ after(grammarAccess.getSignatureAccess().getVersionVersionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__InputAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getInputConstraintLanguageEnumRuleCall_2_1_0()); }
	ruleConstraintLanguage{ after(grammarAccess.getSignatureAccess().getInputConstraintLanguageEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ValidatorsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getValidatorsValidatorParserRuleCall_4_0()); }
	ruleValidator{ after(grammarAccess.getSignatureAccess().getValidatorsValidatorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ValidatorsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getValidatorsValidatorParserRuleCall_5_1_0()); }
	ruleValidator{ after(grammarAccess.getSignatureAccess().getValidatorsValidatorParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getIdDpfIdParserRuleCall_0_0()); }
	ruleDpfId{ after(grammarAccess.getValidatorAccess().getIdDpfIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Parameter_varsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getParameter_varsIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getValidatorAccess().getParameter_varsIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Parameter_varsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getParameter_varsIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getValidatorAccess().getParameter_varsIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ArityAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityAlternatives_5_0_0()); }
(rule__Validator__ArityAlternatives_5_0_0)
{ after(grammarAccess.getValidatorAccess().getArityAlternatives_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ArityAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getArityAlternatives_5_1_1_0()); }
(rule__Validator__ArityAlternatives_5_1_1_0)
{ after(grammarAccess.getValidatorAccess().getArityAlternatives_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__OclAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getOclSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getValidatorAccess().getOclSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ErrorMsgAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidatorAccess().getErrorMsgSTRINGTerminalRuleCall_10_0()); }
	RULE_STRING{ after(grammarAccess.getValidatorAccess().getErrorMsgSTRINGTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getElementsElementParserRuleCall_2_0_0()); }
	ruleElement{ after(grammarAccess.getGraphAccess().getElementsElementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getElementsElementParserRuleCall_2_1_1_0()); }
	ruleElement{ after(grammarAccess.getGraphAccess().getElementsElementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__SrAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_0_0_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__IdAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_0_2_0()); }
	ruleDpfId{ after(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TgDataTypeAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgDataTypeDataTypeEnumRuleCall_0_4_0()); }
	ruleDataType{ after(grammarAccess.getArrowAccess().getTgDataTypeDataTypeEnumRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__SrAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_1_0_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__IdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_1_2_0()); }
	ruleDpfId{ after(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TypeAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTypeDpfIdParserRuleCall_1_4_0()); }
	ruleDpfId{ after(grammarAccess.getArrowAccess().getTypeDpfIdParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TgValueAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgValueAttributeValueParserRuleCall_1_6_0()); }
	ruleAttributeValue{ after(grammarAccess.getArrowAccess().getTgValueAttributeValueParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__SrAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_2_0_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__IdAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_2_2_0()); }
	ruleDpfId{ after(grammarAccess.getArrowAccess().getIdDpfIdParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TypeAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTypeDpfIdParserRuleCall_2_4_0()); }
	ruleDpfId{ after(grammarAccess.getArrowAccess().getTypeDpfIdParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TgNodeAssignment_2_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgNodeNodeSimpleParserRuleCall_2_6_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getTgNodeNodeSimpleParserRuleCall_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__SrAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_3_0_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getSrNodeSimpleParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__TgNodeAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getTgNodeNodeSimpleParserRuleCall_3_2_0()); }
	ruleNodeSimple{ after(grammarAccess.getArrowAccess().getTgNodeNodeSimpleParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getIdDpfIdParserRuleCall_0_0()); }
	ruleDpfId{ after(grammarAccess.getNodeAccess().getIdDpfIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTypeDpfIdParserRuleCall_2_0()); }
	ruleDpfId{ after(grammarAccess.getNodeAccess().getTypeDpfIdParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__InhAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getInhNodeSimpleParserRuleCall_3_1_0()); }
	ruleNodeSimple{ after(grammarAccess.getNodeAccess().getInhNodeSimpleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__InhAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getInhNodeSimpleParserRuleCall_3_2_1_0()); }
	ruleNodeSimple{ after(grammarAccess.getNodeAccess().getInhNodeSimpleParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__PropertiesAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPropertiesPropertyParserRuleCall_4_1_0_0()); }
	ruleProperty{ after(grammarAccess.getNodeAccess().getPropertiesPropertyParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__PropertiesAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPropertiesPropertyParserRuleCall_4_1_1_1_0()); }
	ruleProperty{ after(grammarAccess.getNodeAccess().getPropertiesPropertyParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSimple__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSimpleAccess().getIdDpfIdParserRuleCall_0_0()); }
	ruleDpfId{ after(grammarAccess.getNodeSimpleAccess().getIdDpfIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSimple__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSimpleAccess().getTypeDpfIdParserRuleCall_2_0()); }
	ruleDpfId{ after(grammarAccess.getNodeSimpleAccess().getTypeDpfIdParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__IdAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_0_0_0()); }
	ruleDpfId{ after(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TgDataTypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgDataTypeDataTypeEnumRuleCall_0_2_0()); }
	ruleDataType{ after(grammarAccess.getPropertyAccess().getTgDataTypeDataTypeEnumRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__IdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_1_0_0()); }
	ruleDpfId{ after(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeDpfIdParserRuleCall_1_2_0()); }
	ruleDpfId{ after(grammarAccess.getPropertyAccess().getTypeDpfIdParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TgValueAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgValueAttributeValueParserRuleCall_1_4_0()); }
	ruleAttributeValue{ after(grammarAccess.getPropertyAccess().getTgValueAttributeValueParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__IdAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_2_0_0()); }
	ruleDpfId{ after(grammarAccess.getPropertyAccess().getIdDpfIdParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeDpfIdParserRuleCall_2_2_0()); }
	ruleDpfId{ after(grammarAccess.getPropertyAccess().getTypeDpfIdParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TgNodeAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTgNodeNodeSimpleParserRuleCall_2_4_0()); }
	ruleNodeSimple{ after(grammarAccess.getPropertyAccess().getTgNodeNodeSimpleParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeValueAccess().getValueSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__VariableIdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getVariableIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeValueAccess().getVariableIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDpfIdAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DpfId__IdAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDpfIdAccess().getIdRIdParserRuleCall_1_1_0()); }
	ruleRId{ after(grammarAccess.getDpfIdAccess().getIdRIdParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RId__NumsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getNumsINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getRIdAccess().getNumsINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RId__NumsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRIdAccess().getNumsINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getRIdAccess().getNumsINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


