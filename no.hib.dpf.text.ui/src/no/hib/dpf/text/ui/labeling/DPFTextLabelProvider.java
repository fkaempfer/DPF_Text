/*
* generated by Xtext
*/
package no.hib.dpf.text.ui.labeling;

import no.hib.dpf.text.DPFConstants;
import no.hib.dpf.text.tdpf.Arrow;
import no.hib.dpf.text.tdpf.ChoosenSignature;
import no.hib.dpf.text.tdpf.ChoosenSpecification;
import no.hib.dpf.text.tdpf.Constraint;
import no.hib.dpf.text.tdpf.ConstraintList;
import no.hib.dpf.text.tdpf.Graph;
import no.hib.dpf.text.tdpf.Model;
import no.hib.dpf.text.tdpf.Node;
import no.hib.dpf.text.tdpf.Property;
import no.hib.dpf.text.tdpf.Signature;
import no.hib.dpf.text.tdpf.Specification;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects in the outline. 
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class DPFTextLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public DPFTextLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
		
	String text(Model m) {
		  return (m instanceof Signature)?"Signature":"Commands";
	}

	String text(Specification n) {
		  return "Specification:" + n.getType().getId();
	}

	String text(ChoosenSpecification s) {
		  if(!"DPF".equals(s.getId())){
			  return "meta-specification=" + s.getId() + DPFConstants.SPECIFICATION_FILE_EXTENSION;
		  }else{
			  return "meta-specification=DPF";
		  }
	}

	String text(Graph g) {
		  return "Graph";
	}
		
	String image(Node n) {
		  return "node.png";
	}

	String image(Arrow a) {
		  return (null==a.getType() && null != a.getTgNode())?"inheritance.png":"arrow.png";
	}	

	String image(Property p) {
		  return "arrow.png";
	}	
	
	String image(Constraint c) {
		  return "constraint.png";
	}	
	
	String image(Graph g) {
		  return "graph.png";
	}
	
	String image(Specification g) {
		  return "specification.png";
	}

	String text(ChoosenSignature s) {
		  return "constraint-semantic=" + s.getId() + DPFConstants.SIGNATURE_FILE_EXTENSION;
	}
	
	String text(ConstraintList s){
		  return "Constraints";
	}

}
